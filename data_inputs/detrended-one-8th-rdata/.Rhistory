workingDir <- "/Users/noellepatterson/apps/Process_flow_projections/"
files = Sys.glob("data/vioplot/*/viodata/*.csv")
for (file in files) {
data_values <- read.csv(file, header = TRUE, check.names = FALSE, na.strings=c("","NA"))
df <- data.frame(data_values)
names(df) <- c("index","historic","future")
df <- df[c("historic","future")]
mdf <- melt(df)
mdf$variable <- as.factor(mdf$variable)
groups <- c("historic","future")
groups <- as.factor(groups)
name <- strsplit(file, "/")
folder_name <- paste(name[[1]][1], name[[1]][2],name[[1]][3], "plots", sep="/")
dir.create(folder_name, showWarnings = FALSE)
name <- tail(name[[1]], n=1)
name <- substr(name, 1, nchar(name)-4)
g <- ggplot(mdf,aes(x=variable,y=value)) +
geom_violin() +
geom_violin(aes(fill = factor(variable))) +
geom_boxplot(width=0.1, fill="white") +
labs(title=name, x="", y="") +
theme(plot.title = element_text(hjust = 0.5))
g + scale_fill_manual(name = "", labels= c("1950-2005","2020-2099"),values=c("red", "blue"))
ggsave(paste(name,".png", sep=""), path=folder_name)
}
files = Sys.glob("data/vioplot/*/viodata/*.csv")
files = Sys.glob("data/vioplot/*/viodata/*.csv")
workingDir <- "/Users/noellepatterson/apps/Other/Process_flow_projections/"
files = Sys.glob("data/vioplot/*/viodata/*.csv")
library("raster")
library("tmap")
library("ggplot2")
library("Hmisc")
library("corrplot")
library("Amelia")
install.packages("Amelia")
library("raster")
library("tmap")
library("ggplot2")
library("Hmisc")
library("corrplot")
library("Amelia")
library("oce")
instakk.packages("oce")
install.packages("oce")
library("raster")
library("tmap")
library("ggplot2")
library("Hmisc")
library("corrplot")
library("Amelia")
library("oce")
library("clValid")
install.packages("tidyr")
library('tidyr')
library(dplyr)
library(vegan)
library(broom)
library(reshape2)
library(ggpubr)
library(data.table)
library(wesanderson)
general <- readRDS("./consolidated_results_NSF_general.Rds")
specific <- readRDS("./consolidated_results_NSF_specific.Rds")
theme <- readRDS("./consolidated_results_theme.Rds")
methods <- readRDS("./consolidated_results_methods.Rds")
budget <- readRDS("./consolidated_results_water budget.Rds")
getwd()
path = "/Users/noellepatterson/apps/Other/Climate_change_research/data_inputs/"
path = "/Users/noellepatterson/apps/Other/Climate_change_research/data_inputs/detrended-one-8th-rdata/"
setwd(path)
getwd()
path = "/Users/noellepatterson/apps/Other/Climate_change_research/data_inputs/detrended-one-8th-rdata/"
setwd(path)
filenames = list.files(pattern="*.rds")
files = lapply(filenames, readRDS)
files
h
len(files)
length(files)
files[1]
files[1][1]
length(files[1][1])
length(files[[1]])
type(files)
typeof(files)
typeof(files[1])
typeof(files[[1]])
length(files[[1]])
length(files[[[1]]])
length(files[[1,1]])
length(files[1])
files[8]
View(files)
files[[1]][1,1]
files[[1]][1,2]
files[[1]][1,3]
files[[1]][1,4]
files[[1]][1,5]
files[[1]][1,4:5]
files[[1]][100,4:5]
"1000885"
files[[1]][10000,4:5]
files[[1]][4868,4:5]
files[[1]][4869,4:5]
files[[1]][4869,]
files[[1]][1,]
db = files[[1]]
grid1 = db[seq(1, length(db), 4869)]
head(grid1)
db = files[[1]][,6]
head(db)
grid1 = precip_all_grids[seq(1, length(precip_all_grids), 4869)]
precip_all_grids = files[[1]][,6]
grid1 = precip_all_grids[seq(1, length(precip_all_grids), 4869)]
test = seq(1,25,1)
test
test[seq(1,length(test), 5)]
grid = test[seq(1,length(test), 5)]
grid + 1
grid + 4
separate_years <- function(precip_all_grids, year){
grid = precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1
return(grid)
}
path = "/Users/noellepatterson/apps/Other/Climate_change_research/data_inputs/detrended-one-8th-rdata/"
setwd(path)
filenames = list.files(pattern="*.rds")
files = lapply(filenames, readRDS)
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[1]][,6] # precipe is 6th col of df
grid1 = separate_years(precip_all_grids, 1)
grid2 = separate_years(precip_all_grids, 2)
grid_ls = seq(1, 4869, 1)
all_grids = lapply(grid_ls, separate_years)
all_grids = lapply(grid_ls, separate_years, arg1=precip_all_grids)
all_grids = lapply(grid_ls, separate_years, precip_all_grids=precip_all_grids)
all_grids[1]
all_grids[2]
len(all_grids)
length(all_grids)
all_grids[2]+1
all_grids[2].+1
lapply(all_grids[2], `+`, 1)
all_grids = lapply(grid_ls, separate_years, precip_all_grids=precip_all_grids)
# next: apply an intensity alteration to each time series
all_grids2 = lapply(all_grids, precip_manip)
precip_manip <- function(annual_precip){
annual_precip = lapply(annual_precip,`+`,1)
return(annual_precip)
}
# next: apply an intensity alteration to each time series
all_grids2 = lapply(all_grids, precip_manip)
all_grids2[1]
all_grids[1]
annual_precip = all_grids[1]
annual_precip
lapply(annual_precip,`+`,1)
precip_manip <- function(annual_precip){
annual_precip2 = lapply(annual_precip,`+`,1)
return(annual_precip2)
}
all_grids = lapply(grid_ls, separate_years, precip_all_grids=precip_all_grids)
# next: apply an intensity alteration to each time series
all_grids2 = lapply(all_grids, precip_manip)
all_grids2[1]
length(all_grids2)
length(all_grids2[1])
length(all_grids[1])
all_grids[1]
typeof(all_grids[1])
typeof(all_grids2[1])
typeof(all_grids2)
typeof(all_grids)
all_grids2[1][1]
all_grids2[1][1][1]
all_grids[1][1][1]
all_grids[1][1][1][1]
all_grids[1][1][1][1][1]
all_grids2[1][1][1][1][1]
View(all_grids2)
View(all_grids)
seq(1, 4869, 1)
seq(1, length(precip_all_grids), 4869)
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, precip_manip)
new_grids[2]
precip_all_grids[seq(1, length(precip_all_grids), 4869)] = new_grids[2]
#################
### FUNCTIONS ###
#################
separate_years <- function(precip_all_grids, year){
grid = precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1
return(grid)
}
precip_manip <- function(annual_precip){
annual_precip2 = lapply(annual_precip,`+`,1)
return(annual_precip2)
}
reinsert_precip <- function(new_grids, year){
precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1 = new_grids[year]
return(precip_all_grids)
}
path = "/Users/noellepatterson/apps/Other/Climate_change_research/data_inputs/detrended-one-8th-rdata/"
setwd(path)
filenames = list.files(pattern="*.rds")
files = lapply(filenames, readRDS)
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[1]][,6] # precipe is 6th col of df
grid_ls = seq(1, 4869, 1)
all_grids = lapply(grid_ls, separate_years, precip_all_grids=precip_all_grids)
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, precip_manip)
# then: re-insert to db for that year
precip_all_grids_updated = lapply(grid_ls, reinsert_precip, new_grids=new_grids)
reinsert_precip <- function(new_grids, year){
precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1 = new_grids[year]
return(precip_all_grids)
}
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[1]][,6] # precipe is 6th col of df
path = "/Users/noellepatterson/apps/Other/Climate_change_research/data_inputs/detrended-one-8th-rdata/"
setwd(path)
filenames = list.files(pattern="*.rds")
files = lapply(filenames, readRDS)
# proof of concept for first year data (out of 64 total years)
precip_all_grids = files[[1]][,6] # precipe is 6th col of df
grid_ls = seq(1, 4869, 1)
all_grids = lapply(grid_ls, separate_years, precip_all_grids=precip_all_grids)
#################
### FUNCTIONS ###
#################
separate_years <- function(precip_all_grids, year){
grid = precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1
return(grid)
}
precip_manip <- function(annual_precip){
annual_precip2 = lapply(annual_precip,`+`,1)
return(annual_precip2)
}
reinsert_precip <- function(new_grids, year){
precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1 = new_grids[year]
return(precip_all_grids)
}
all_grids = lapply(grid_ls, separate_years, precip_all_grids=precip_all_grids)
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, precip_manip)
# then: re-insert to db for that year
precip_all_grids_updated = lapply(grid_ls, reinsert_precip, new_grids=new_grids)
reinsert_precip = function(new_grids, year){
precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1 = new_grids[year]
return(precip_all_grids)
}
# then: re-insert to db for that year
precip_all_grids_updated = lapply(grid_ls, reinsert_precip, new_grids=new_grids)
# then: re-insert to db for that year
precip_all_grids_updated = reinsert_precip(new_grids[1], 1)
reinsert_precip <- function(new_grids, year){
precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1 = new_grids[year]
return(precip_all_grids)
}
View(reinsert_precip)
View(precip_manip)
View(separate_years)
precip_all_grids[seq(1, length(precip_all_grids), 4869)]
year=1
precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1
new_grids[year]
precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1 = new_grids[year]
precip_all_grids[seq(1, length(precip_all_grids), 4869)] + year - 1 <= new_grids[year]
typeof(new_grids)
typeof(new_grids[1])
unlist(new_grids, recursive = FALSE)
list.flatten(new_grids, use.names = TRUE, classes = "ANY")
new_grids
# next: apply an intensity alteration to each time series
new_grids = lapply(all_grids, precip_manip)
length(new_grids)
new_grids[1]
new_grids[[1]
]
new_grids[[[1]]]
new_grids[[1]][1]
new_grids[1] = new_grids[[1]]
length(new_grids[1])
length(new_grids[[1]])
View(new_grids)
View(all_grids)
new_grids[[2]]
length(new_grids[[2]])
all_grids[[2]]
length(all_grids[[2]])
new_grids[[2]]
typeof(new_grids[[2]])
new_grids[[2]][1]
new_grids[[2]][2]
all_grids[[2]][2]
all_grids[[2]][1]
typeof(new_grids[[2]][1])
typeof(all_grids[[2]][1])
all_grids[[2]][[1]]
typeof(all_grids[[2]][[1]])
annual_precip
annual_precip = all_grids[1]
annual_precip
lapply(annual_precip,`+`,1)
annual_precip2 = lapply(annual_precip,`+`,1)
annual_precip2
annual_precip
annual_precip2
annual_precip2[1]
annual_precip2[1][1]
annual_precip2[[1]][1]
annual_precip[[1]][1]
new_grids
